<job id="mklink-toho">
  <script language="JScript" src="config.js"/>
  <script language="JScript" src="common.js"/>
  <script language="JScript">

var oShell = new ActiveXObject("WScript.Shell");
var oFSO = new ActiveXObject("Scripting.FileSystemObject");


if (! userIsAdministrators()) {
    WScript.Echo("管理者権限付きで実行してください。");
    WScript.Quit();
}

SAVEDATA_DIR = oShell.expandEnvironmentStrings(SAVEDATA_DIR);
if (! oFSO.folderExists(SAVEDATA_DIR)) {
    WScript.Echo("SAVEDATA_DIR に指定されたパスが存在しません。\n" +
                 "config.js を編集してください。");
    WScript.Quit();
}




if (runCmd(['backup-toho-data.wsf', '/q'])) {
    WScript.Echo("既存のデータを退避できませんでした。");
    WScript.Quit();
}

var success = [];
var skipped = [];
var failed = [];
var ctx = {};
for (var name in PROG_INFO) {
    ctx = {name: name};

    var save_dir = SAVEDATA_DIR + "\\" + name;
    var prog_dir = PROG_INFO[name].dir;
    if (!oFSO.folderExists(save_dir) || !oFSO.folderExists(prog_dir)) {
        skipped.push(shallowCopy(ctx));
        continue;
    }

    for (var i in ENUM_KEYS) {
        var key = ENUM_KEYS[i];
        if (! PROG_INFO[name][key]) {
            continue;
        }
        ctx.key = key;
        ctx.prog_name = PROG_INFO[name][key].name;

        if (key === 'datadir') {
            var link = oShell.expandEnvironmentStrings(PROG_INFO[name][key].name);
            var target = save_dir;
            // 「%APPDATA%\ShanghaiAlice」は必要に応じて作られるため、
            // 存在しない可能性がある。
            runBuiltinCmd(['mkdir', oFSO.getParentFolderName(link)]);
        } else {
            var link = prog_dir + "\\" + PROG_INFO[name][key].name;
            var target = save_dir + "\\" + PROG_INFO[name][key].name;
        }
        ctx.link = link;
        ctx.target = target;
        // リンク元がないためスキップ
        if (! pathExists(target)) {
            skipped.push(shallowCopy(ctx));
            continue;
        }
        if (PROG_INFO[name][key].type === 'dir') {
            if (mklinkDir(link, target)) {
                success.push(shallowCopy(ctx));
            } else {
                failed.push(shallowCopy(ctx));
            }
        } else {
            if (mklinkFile(link, target)) {
                success.push(shallowCopy(ctx));
            } else {
                failed.push(shallowCopy(ctx));
            }
        }
    }
}

showMsg(success
        , "以下のファイルは SAVEDATA_DIR フォルダとリンクされました。"
        , function(msg, ctx) {
            msg += "\n  ";
            if (ctx.key === 'datadir') {
                msg += ctx.name + '/' + '<datadirのフォルダ>';
            } else {
                msg += ctx.name + '/' + ctx.prog_name;
            }
            return msg;
        }
);

showMsg(skipped
        , "以下のファイルはインストールされていなかったか、" +
            "SAVEDATA_DIR フォルダに該当フォルダがなかったため" +
            "スキップされました。"
        , function(msg, ctx) {
            msg += "\n  ";
            if (!ctx.key) {
                msg += ctx.name;
            } else if (ctx.key === 'datadir') {
                msg += ctx.name + '/' + '<datadirのフォルダ>';
            } else {
                msg += ctx.name + '/' + ctx.prog_name;
            }
            return msg;
        }
);

showMsg(failed
        , "以下のファイルは SAVEDATA_DIR フォルダとのリンクに失敗しました。"
        , function(msg, ctx) {
            msg += "\n  ";
            if (ctx.key === 'datadir') {
                msg += ctx.name + '/' + '<datadirのフォルダ>';
            } else {
                msg += ctx.name + '/' + ctx.prog_name;
            }
            return msg;
        }
);




function mklinkDir(link, target) {
    return !runBuiltinCmd(['mklink', '/j', link, target]);
}

function mklinkFile(link, target) {
    return !runBuiltinCmd(['mklink', '/h', link, target]);
}


</script>
</job>
